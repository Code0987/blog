{"componentChunkName":"component---src-templates-post-js","path":"/creating-multi-purpose-reactive-forms-with-angular","webpackCompilationHash":"74415a2b0666f4675f68","result":{"data":{"mdx":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2019-03-08\",\n  \"title\": \"Creating multi-purpose reactive forms with Angular\",\n  \"categories\": [\"angular\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Hello. \"), mdx(\"p\", null, \"This will be a short and quick tutorial on reactive forms with Angular.\\nWe'll be learning step by step on how to create a single\\nsignup/login/reset form with a couple of extra dynamic elements.\"), mdx(\"p\", null, mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"593px\"\n    }\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"80.26981450252951%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0px\",\n      \"left\": \"0px\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"img\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0px\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0px\",\n      \"left\": \"0px\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n    },\n    \"alt\": \"1\",\n    \"title\": \"\",\n    \"src\": \"/static/f40ebb0a363b2a7273a778ab0503c965/12074/1.jpg\",\n    \"srcSet\": [\"/static/f40ebb0a363b2a7273a778ab0503c965/3dc29/1.jpg 208w\", \"/static/f40ebb0a363b2a7273a778ab0503c965/b98fd/1.jpg 415w\", \"/static/f40ebb0a363b2a7273a778ab0503c965/12074/1.jpg 593w\"],\n    \"sizes\": \"(max-width: 593px) 100vw, 593px\"\n  })), \"\\n  \")), mdx(\"p\", null, \"The idea and assumption are that generally, these three forms have common elements,\\nwe can combine them and save time and long-term maintainability without sacrificing much UI/UX. \"), mdx(\"p\", null, \"Let's start.\"), mdx(\"h3\", {\n    \"id\": \"references\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#references\",\n    \"aria-label\": \"references permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"References\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://angular.io/guide/reactive-forms\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"Angular Reactive Forms\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://stackblitz.com/edit/angular-reactive-forms-multi\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"Complete code\"))), mdx(\"h3\", {\n    \"id\": \"step-1-basic-setup\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#step-1-basic-setup\",\n    \"aria-label\": \"step 1 basic setup permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Step 1: Basic setup\"), mdx(\"p\", null, \"Head over to your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"app.module.ts\"), \" or any parent module.\\nMake sure it has the following imports and structure.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"import { NgModule } from '@angular/core';\\nimport { BrowserModule } from '@angular/platform-browser';\\nimport { ReactiveFormsModule } from '@angular/forms';\\n\\nimport { AppComponent } from './app.component';\\n\\n@NgModule({\\n  imports: [\\n    BrowserModule,\\n    ReactiveFormsModule\\n  ],\\n  declarations: [\\n    AppComponent\\n  ],\\n  bootstrap: [AppComponent]\\n})\\n\\nexport class AppModule { }\\n\")), mdx(\"h3\", {\n    \"id\": \"step-2-form-uiux\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#step-2-form-uiux\",\n    \"aria-label\": \"step 2 form uiux permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Step 2: Form UI/UX\"), mdx(\"p\", null, \"Below is the code for the whole dynamic form.\\nIt reacts to user input and changes accordingly.\\nIt also includes validation and error feedback.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \"<div class=\\\"jumbotron\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-4 col-md-6 ml-auto mr-auto\\\">\\n        <div class=\\\"card\\\">\\n          <form class=\\\"form\\\" [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"process()\\\">\\n\\n            <div class=\\\"card-header card-header-primary text-center\\\">\\n              <h4 class=\\\"card-title\\\">\\n                {{newUser ? 'Signup' : 'Login'}}\\n              </h4>\\n              <a (click)=\\\"toggle()\\\" class=\\\"btn btn-warning\\\">\\n                {{newUser ? 'Already have an account?' : 'Are you new?'}}\\n              </a>\\n            </div>\\n\\n            <div class=\\\"card-body\\\">\\n              <p class=\\\"description text-center\\\">\\n\\n                <div class=\\\"input-group\\\" *ngIf=\\\"newUser\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\">\\n                      <i class=\\\"fa fa-user-circle\\\"></i>\\n                    </span>\\n                  </div>\\n                  <input type=\\\"text\\\" name=\\\"name\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" placeholder=\\\"Name...\\\">\\n                </div>\\n\\n                <div class=\\\"input-group\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\">\\n                      <i class=\\\"fa fa-envelope\\\"></i>\\n                    </span>\\n                  </div>\\n                  <input type=\\\"email\\\" name=\\\"email\\\" formControlName=\\\"email\\\" required class=\\\"form-control\\\"\\n                    placeholder=\\\"Email...\\\">\\n                </div>\\n                <p *ngIf=\\\"formErrors.email\\\" class=\\\"text-center text-danger\\\">\\n                  {{formErrors.email}}\\n                </p>\\n\\n                <div class=\\\"input-group\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\">\\n                      <i class=\\\"fa fa-key\\\"></i>\\n                    </span>\\n                  </div>\\n                  <input type=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"password\\\" required class=\\\"form-control\\\"\\n                    placeholder=\\\"Password...\\\">\\n                </div>\\n                <p *ngIf=\\\"formErrors.password\\\" class=\\\"text-center text-danger\\\">\\n                  {{formErrors.password}}\\n                </p>\\n\\n              </div>\\n\\n              <div class=\\\"footer text-center\\\">            \\n                <button type=\\\"submit\\\" [disabled]=\\\"!formGroup.valid\\\" class=\\\"btn btn-primary btn-wd\\\">Get Started</button>\\n\\n                <br>\\n                <br>\\n\\n                <a *ngIf=\\\"!passReset && formGroup.controls.email.valid\\\" class=\\\"btn btn-danger btn-link\\\"\\n                  (click)=\\\"forgotPassword()\\\">\\n                  Reset my password\\n                </a>\\n\\n                <p *ngIf=\\\"passReset\\\" class=\\\"text-primary\\\">\\n                  Reset requested. Check your email for instructions.\\n                </p>\\n\\n                <p style=\\\"padding: 12px;\\\">\\n                  By Login or Signup, you automatically accept the <a href=\\\"#\\\">Terms of Service</a> and <a href=\\\"#\\\">Privacy Policy</a>.\\n                </p>\\n              </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\")), mdx(\"p\", null, \"Ok, so what's going on?\"), mdx(\"p\", null, \"The form will be bound with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"formGroup\"), \" variable in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".component.ts\"), \"\\nusing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[formGroup]\"), \" directive.\"), mdx(\"p\", null, \"The submit event will be bound to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"process\"), \" function as well, where we'll\\nbe able to handle form states and react accordingly.\"), mdx(\"h3\", {\n    \"id\": \"step-3-form-logic\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#step-3-form-logic\",\n    \"aria-label\": \"step 3 form logic permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Step 3: Form Logic\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"import { Component, OnInit } from '@angular/core';\\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\\n\\n@Component({\\n  selector: 'app',\\n  templateUrl: 'app.component.html'\\n})\\n\\nexport class AppComponent implements OnInit {\\n\\n  formGroup: FormGroup;\\n  newUser = false;\\n  passReset = false;\\n  formErrors = {\\n    'name': '',\\n    'email': '',\\n    'password': ''\\n  };\\n  validationMessages = {\\n    'name': {\\n      'required': 'Required.'\\n    },\\n    'email': {\\n      'required': 'Required.',\\n      'email': 'Must be a valid email'\\n    },\\n    'password': {\\n      'required': 'Required.',\\n      'pattern': 'Must include at one letter and one number.',\\n      'minlength': 'Must be at least 4 characters long.',\\n      'maxlength': 'Cannot be more than 40 characters long.',\\n    }\\n  };\\n\\n  constructor(private formBuilder: FormBuilder) { }\\n\\n  ngOnInit() {\\n    this.formGroup = this.formBuilder.group({\\n      'name': ['', []],\\n      'email': ['', [Validators.required, Validators.email]],\\n      'password': ['', [\\n        Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$'),\\n        Validators.minLength(6),\\n        Validators.maxLength(25)\\n      ]],\\n    });\\n\\n    this.formGroup.valueChanges.subscribe(data => this.onValueChanged(data));\\n\\n    this.onValueChanged(); // reset validation messages\\n  }\\n\\n  toggle(): void {\\n    this.newUser = !this.newUser;\\n  }\\n\\n  onValueChanged(data?: any) {\\n    if (!this.formGroup) { return; }\\n    const form = this.formGroup;\\n    for (const field of Object.keys(this.formErrors)) {\\n      // clear previous error message (if any)\\n      this.formErrors[field] = '';\\n      const control = form.get(field);\\n      if (control && control.dirty && !control.valid) {\\n        const messages = this.validationMessages[field];\\n        for (const key of Object.keys(control.errors)) {\\n          this.formErrors[field] += messages[key] + ' ';\\n        }\\n      }\\n    }\\n  }\\n\\n  process(): void {\\n    if (this.newUser) {\\n      // Call register service/api and update UI\\n    } else {\\n      // Call login service/api and update UI\\n    }\\n  }\\n\\n  forgotPassword() {\\n    // Call forget password service/api and update UI\\n  }\\n\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"extra-using-single-form-with-multiple-routes\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#extra-using-single-form-with-multiple-routes\",\n    \"aria-label\": \"extra using single form with multiple routes permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Extra: Using single form with multiple routes\"), mdx(\"p\", null, \"Now since our form is dynamic and multi-purpose, we can bind different states with different routes.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"constructor(private router: Router) {\\n\\n  if (router.url.includes('signup')) {\\n    this.newUser = true;\\n  }\\n\\n}\\n\")), mdx(\"p\", null, \"In your routes, you can set a single component containing multi-purpose forms to multiple routes.\\nLater in the component code, at the starting point, you switch states based on the current route, as in above snippet.\"), mdx(\"h3\", {\n    \"id\": \"final\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#final\",\n    \"aria-label\": \"final permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Final\"), mdx(\"p\", null, \"You can see the working sample at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://stackblitz.com/edit/angular-reactive-forms-multi\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"StackBlitz\"), \", fork and use it in your own apps as you like.\"), mdx(\"p\", null, \"With some styling, you can makes forms like this \", mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"485px\"\n    }\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"120.82474226804123%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0px\",\n      \"left\": \"0px\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"img\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0px\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0px\",\n      \"left\": \"0px\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n    },\n    \"alt\": \"2\",\n    \"title\": \"\",\n    \"src\": \"/static/770edf4d29c9da6ab091ca6fa64dca53/71366/2.jpg\",\n    \"srcSet\": [\"/static/770edf4d29c9da6ab091ca6fa64dca53/3dc29/2.jpg 208w\", \"/static/770edf4d29c9da6ab091ca6fa64dca53/b98fd/2.jpg 415w\", \"/static/770edf4d29c9da6ab091ca6fa64dca53/71366/2.jpg 485w\"],\n    \"sizes\": \"(max-width: 485px) 100vw, 485px\"\n  })), \"\\n  \"), \".\"), mdx(\"p\", null, \"Constructive feedback is always welcome. Feel free to share your ideas and suggestions.\"));\n}\nMDXContent.isMDXComponent = true;"},"excerpt":"Hello.  This will be a short and quick tutorial on reactive forms with Angular.\nWe'll be learning step by step on how to create a single…","frontmatter":{"title":"Creating multi-purpose reactive forms with Angular","date":"03/08/2019","categories":["angular"]},"timeToRead":1,"parent":{"__typename":"File","mtime":"2019-03-10T19:19:36.364Z","birthtime":"2019-03-10T19:19:36.364Z"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/creating-multi-purpose-reactive-forms-with-angular","prev":{"fields":{"slug":"/welcome-folks"},"frontmatter":{"title":"Welcome folks!","categories":["welcome"],"url":null}},"next":{"fields":{"slug":"/introduction-to-canvas"},"frontmatter":{"title":"Introduction to Canvas","categories":["html, canvas"],"url":"https://iq.opengenus.org/introduction-to-canvas/"}}}}}